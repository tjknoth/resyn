data IList a  where 
  INil :: IList a 
  ICons :: x: a -> xs: IList {a | x <= _v } -> IList a 
  
termination measure ilen :: IList a -> {Int | _v >= 0} where
  INil -> 0
  ICons x xs -> 1 + ilen xs  

measure ielems :: IList a -> Set a where
  INil -> []
  ICons x xs -> [x] + ielems xs

qualifier {x < y}

insert :: x: a -> xs: IList {a| |1} -[1]-> {IList a | ielems _v == ielems xs + [x]}
insert = ??