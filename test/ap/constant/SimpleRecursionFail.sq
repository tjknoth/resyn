data List a <q :: Int> where
  Nil :: List a <q> 
  Cons :: x: {a| | q} -> xs: List a <q> -> List a <q>

termination measure len :: List a -> {Int | _v >= 0} where
  Nil -> 0
  Cons x xs -> 1 + len xs

simple :: List a <{0}> -[1]-> List a <{0}>
simple = \xs.
  match xs with
    Nil -> xs
    Cons y ys -> simple ys
